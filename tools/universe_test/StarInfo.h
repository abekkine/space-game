#ifndef STAR_INFO_H_
#define STAR_INFO_H_

#include "StarInterface.h"
#include "StarCategory.h"
#include "PlanetInterface.h"

#include <string>
#include <vector>

class StarInfo : public StarInterface {
public:
    void GetPosition(double & vx, double & vy) {
        vx = x;
        vy = y;
    }
    float * GetColor() {
        return color_ptr;
    }
    float GetRadius() {
        return radius;
    }
    std::string & GetName() {
        return cat_name;
    }
    int GetType() {
        return cat_type;
    }
    float GetMass() {
        return mass;
    }
    void GeneratePlanets() {
        // TODO
    }

public:
    StarInfo() {
        cat_name = "none";
        cat_type = sst_None;
        color_ptr = color_;
        seed = 0.0;
        radius = 0.0;
        mass = 0.0;
        for (int i=0; i<4; ++i) color_[i] = 1.0;
    }
    ~StarInfo() {}

public:
        // Basic parameters
        std::string cat_name;
        StarSequenceType cat_type;
        double x, y;
        float *color_ptr;
        double seed;
        // Parameters generated by seed.
        float radius;
        float mass;
        std::vector<PlanetInterface *> planets_;

private:
        float color_[4];
};

#endif // STAR_INFO_H_